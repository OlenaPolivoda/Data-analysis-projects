--account creation analysis


with info_all as(
select s.date,
sp.country,
a.send_interval,
a.is_verified,
a.is_unsubscribed,
count(a.id) as account_cnt,
from `data-analytics-mate.DA.session` s
join `data-analytics-mate.DA.session_params` sp
on s.ga_session_id = sp.ga_session_id  
join `data-analytics-mate.DA.account_session` ac  
on s.ga_session_id = ac.ga_session_id
join `data-analytics-mate.DA.account` a
on ac.account_id = a.id
group by 1, 2, 3, 4, 5),
email_metric as(
select date_add(s.date, interval es.sent_date day) as sent_date,
sp.country,
a.send_interval,
a.is_verified,
a.is_unsubscribed,
count(distinct es.id_message) as sent_msg,
count(distinct eo.id_message) as open_msg,
count(distinct ev.id_message) as visit_msg,
from `data-analytics-mate.DA.email_sent` es
join `data-analytics-mate.DA.account_session` ac
on es.id_account = ac.account_id
join `data-analytics-mate.DA.session` s  
on ac.ga_session_id = s.ga_session_id
left join `data-analytics-mate.DA.email_open` eo
on es.id_message = eo.id_message
left join `data-analytics-mate.DA.email_visit` ev
on es.id_message = ev.id_message
join `data-analytics-mate.DA.session_params` sp
on s.ga_session_id = sp.ga_session_id
join `data-analytics-mate.DA.account` a  
on ac.account_id = a.id
group by date_add(s.date, interval es.sent_date day), 2, 3, 4, 5),
final as(
select date,
country,
send_interval,
is_verified,
is_unsubscribed,
account_cnt,
0 sent_msg,
0 open_msg,
0 visit_msg
from info_all
union all
select sent_date,
country,
send_interval,
is_verified,
is_unsubscribed,
0 account_cnt,
sent_msg,
open_msg,
visit_msg
from email_metric
group by 1, 2, 3, 4, 5, 6, 7, 8, 9),
sum_cnt as(
select date,
country,
send_interval,
is_verified,
is_unsubscribed,
account_cnt,
sent_msg,
open_msg,
visit_msg,
sum(sent_msg) as sent_cnt,
sum(open_msg) as open_cnt,
sum(visit_msg) as visit_cnt,
from final  
group by 1, 2, 3, 4, 5, 6, 7, 8, 9),
sum_total as (
select date,
country,
send_interval,
is_verified,
is_unsubscribed,
account_cnt,
sent_msg,
open_msg,
visit_msg,
sum(account_cnt) over (partition by country) as total_country_account_cnt,
sum(sent_msg) over (partition by country) as total_country_sent_cnt,
from sum_cnt  
group by 1, 2, 3, 4, 5, 6, 7, 8, 9),
runk_total as(
select date,
country,
send_interval,
is_verified,
is_unsubscribed,
account_cnt,
sent_msg,
open_msg,
visit_msg,
total_country_account_cnt,
total_country_sent_cnt,
dense_rank() over (order by total_country_account_cnt desc) as rank_total_country_account_cnt,
dense_rank() over (order by total_country_sent_cnt desc) as rank_total_country_sent_cnt
from sum_total
group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)
select date,
country,
send_interval,
is_verified,
is_unsubscribed,
account_cnt,
sent_msg,
open_msg,
visit_msg,
total_country_account_cnt,
total_country_sent_cnt,
rank_total_country_account_cnt,
rank_total_country_sent_cnt
from runk_total
where rank_total_country_account_cnt <= 10 or rank_total_country_sent_cnt <= 10
group by 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13
order by date
